// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserService.Infra.Context;

namespace UserService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200123224945_Device Token Adicionado")]
    partial class DeviceTokenAdicionado
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("UserService.Domain.Entities.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("tipo")
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("perfil");
                });

            modelBuilder.Entity("UserService.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnName("bairro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnName("cep")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnName("cidade")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Cnh")
                        .HasColumnType("INT");

                    b.Property<string>("DeviceToken")
                        .HasColumnName("device_token")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnName("endereco")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("IdProfile")
                        .HasColumnName("id_perfil")
                        .HasColumnType("INT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NumeroResidencia")
                        .IsRequired()
                        .HasColumnName("numero_residencia")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("senha")
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("telefone")
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("IdProfile");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("UserService.Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Ano")
                        .HasColumnName("ano")
                        .HasColumnType("INT");

                    b.Property<decimal>("CargaMaximaKg")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnName("carga_max_kg")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnName("cor")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("id_usuario")
                        .HasColumnType("INT");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnName("modelo")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnName("placa")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Renavan")
                        .IsRequired()
                        .HasColumnName("renavan")
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("veiculo");
                });

            modelBuilder.Entity("UserService.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("UserService.Domain.Entities.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdProfile")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("UserService.Domain.Entities.Veiculo", b =>
                {
                    b.HasOne("UserService.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
